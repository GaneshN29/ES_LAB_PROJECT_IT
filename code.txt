// Trigger: p0.15(output)
// echo : p0.16(input)

#include <lpc17xx.h>  
#define PRESCALE (25-1)  
#include<stdlib.h>  
#include<stdio.h>  


char sevenseg[] = {0x3f,0x6,0x5b,0x4f,0x66,0x6d,0x7d,0x7,0x7f,0x6f};  



int round_val(float num){  
         float val = num - abs(num);           
    if(val <= 0.5)  
              return (int)num;  
         else  
              return (int)num + 1;  
}  
void initTimer(void);
void startTimer(void);
unsigned int stopTimer(void);
void delayUS(unsigned int microseconds);  
void delayMS(unsigned int milliseconds);  



void initTimer(void)
{  
    LPC_TIM0->CTCR = 0x0;  
    LPC_TIM0->PR = PRESCALE; //Increment TC at every 24999+1 clock cycles
    LPC_TIM0->TCR = 0x02; //Reset Timer  
}  



void startTimer(void)  
{  
    LPC_TIM0->TCR = 0x02; //Reset Timer  
    LPC_TIM0->TCR = 0x01; //Enable timer  
}  



unsigned int stopTimer(void)  
{  
    LPC_TIM0->TCR = 0x00; //Disable timer  
    return LPC_TIM0->TC;  //timer counter register 
}  



void delayUS(unsigned int microseconds) //Using Timer0
{  
    LPC_TIM0->TCR = 0x02; //Reset Timer  
LPC_TIM0->TCR = 0x01; //Enable timer  
    while(LPC_TIM0->TC < microseconds); //wait until timer counter reaches the desired delay      
  LPC_TIM0->TCR = 0x00; //Disable timer  
}  



void delayMS(unsigned int milliseconds) 
{  
    delayUS(milliseconds * 1000);  
}  



void delay_trigger(){  //at start 10 microsec high is set
    LPC_GPIO0->FIOSET = (0x1<<15);      
    delayUS(10);  
    LPC_GPIO0->FIOCLR = (0x1<<15);  
}  



int echo_ans(){  
    float pulse_time = 0,distance=0;    
  while((LPC_GPIO0->FIOPIN & (0x1<<16)) == 0x0);     //Wait till echo is low  
    startTimer();                                                
                   //Initialize the echo timer  
    while((LPC_GPIO0->FIOPIN & (0x1<<16)) == 0x1<<16); //Wait till echo is high      
    pulse_time = stopTimer();                                          
    //Get count of echo timer  
distance = (0.0343*pulse_time)/2;  
return round_val(distance);  
}  



void display(int number,int displayTimeSeconds){      
    unsigned int j,i,timeUS = 1000000*displayTimeSeconds,temp;  
    startTimer();      
    while(LPC_TIM0->TC <timeUS){  
         temp = number;  
         for(j=0;j<4;j++){  
                   LPC_GPIO1->FIOPIN = j<<23;  
                   LPC_GPIO0->FIOPIN = sevenseg[(temp%10)]<<4;     //extracting each digit from temp and displaying       
            for(i=0;i<1000;i++);  
                   temp /= 10;  
              }  
    }  
    stopTimer();  
    LPC_GPIO1->FIOPIN = 00<<23;  
    LPC_GPIO0->FIOPIN = 0xF9<<4; //Display a dot  
}  



int main(void){  
    int distance;  
    SystemInit();
    SystemCoreClockUpdate();  

    LPC_PINCON->PINSEL0 = 0x0; //SET TO GPIO  
    LPC_PINCON->PINSEL1 = 0x0;     //SET TO GPIO (For the echo pin)   
    LPC_GPIO0->FIODIR = 0x0FFF0;  //p0.4 to p0.15
    //Decoder  
    LPC_PINCON->PINSEL3 = 0x0;          //Decoder     GPIO config   
    LPC_GPIO1->FIODIR = 0xF<<23; //Decoder output config  


   //Timer setup  
    initTimer();  
    while(1){           
delay_trigger();   //10micro sec high         
distance = echo_ans();  
         display(distance,1);  
    }  
}